import { DevtoolsProvider } from "../providers/devtools";
import { GitHubBanner, Refine } from "@refinedev/core";
import { RefineKbar, RefineKbarProvider } from "@refinedev/kbar";
import {
  RefineSnackbarProvider,
  useNotificationProvider,
} from "@refinedev/mui";
import routerProvider from "@refinedev/nextjs-router";
import { Metadata } from "next";
import { cookies } from "next/headers";
import React, { Suspense } from "react";

import { ColorModeContextProvider } from "../contexts/color-mode";
import { authProviderClient } from "../providers/auth-provider/auth-provider.client";
import { dataProvider } from "../providers/data-provider";

export const metadata: Metadata = {
  title: "Refine",
  description: "Generated by create refine app",
  icons: {
    icon: "/favicon.ico",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const getDefaultMode = async () => {
    const cookieStore = await cookies();
    const theme = cookieStore.get("theme");
    return theme?.value === "dark" ? "dark" : "light";
  };

  const [defaultMode, setDefaultMode] = React.useState<"light" | "dark">("light");

  React.useEffect(() => {
    getDefaultMode().then(setDefaultMode);
  }, []);

  return (
    <html lang={"en"}>
      <body>
        <Suspense>
          <GitHubBanner />
          <RefineKbarProvider>
            <ColorModeContextProvider defaultMode={defaultMode}>
              <RefineSnackbarProvider>
                <DevtoolsProvider>
                  <Refine
                    routerProvider={routerProvider}
                    authProvider={authProviderClient}
                    dataProvider={dataProvider}
                    notificationProvider={useNotificationProvider}
                    resources={[
                      {
                        name: "test",
                        list: "/",
                        meta: {
                          canDelete: true,
                        },
                      },
                    ]}
                    options={{
                      syncWithLocation: true,
                      warnWhenUnsavedChanges: true,
                      useNewQueryKeys: true,
                      projectId: "GHjT7h-KmCwrj-XQi1Vw",
                    }}
                  >
                    {children}
                    <RefineKbar />
                  </Refine>
                </DevtoolsProvider>
              </RefineSnackbarProvider>
            </ColorModeContextProvider>
          </RefineKbarProvider>
        </Suspense>
      </body>
    </html>
  );
}
